// GRID

// VARIABLES


$numCols: 4;
$numGutters: $numCols - 1;

// Width in pixels
$gutter: 30px;
$maxWidth: 1170px;

// Width in percentages
$fullWidth: 100%;

// Height in pixels
$oneRow: 300px;
$twoRow: $gutter + ($oneRow * 2);
$captionHeight: 60px;
$descriptionHeight: 140px;

// Height in percentages
$fullHeight: 100%;

// FUNCTIONS

// Calculating the column width
@function colWidth($numCols, $numGutters, $gutter, $maxWidth){
	@return ($maxWidth - ($numGutters * $gutter)) / $numCols;
}

// Breakpoints

$breakPoint1: 1199px;
$breakPoint2: 979px;
$breakPoint3: 767px;

$mobileWidth: 414px;

// ACTUAL GRID

html, body{
	width: $fullWidth;
}

/* =======================================
		START NESTING 
======================================= */

#folderWrapper{
	//margin: -30px auto 0;
	margin: 10px auto 0;
	max-width: $maxWidth;
	padding-bottom: 50px;
	width: $fullWidth;

	@media only screen and(max-width: $breakPoint2){
		width: 99%;
	}

/* ------------------------------------ */

.clearfix:after{
	clear: both;
	content:"";
	display: table;
}

.gridSizer{
	width: percentage((colWidth($numCols, $numGutters, $gutter, $maxWidth) / $maxWidth));

	// @media only screen and(max-width: $breakPoint1){
	// 	width: percentage( colWidth(($numCols), ($numGutters), $gutter, $breakPoint1) / $breakPoint1);
	// }

	@media only screen and(max-width: $breakPoint2){
		width: percentage( colWidth(($numCols - 1), ($numGutters - 1), $gutter, $breakPoint2) / $breakPoint2);
	}

	@media only screen and(max-width: $breakPoint3){
		width: percentage( colWidth(($numCols - 1), ($numGutters - 1), $gutter, $breakPoint3) / $breakPoint3);
	}

	@media only screen and(max-width: $mobileWidth){
		width: percentage( colWidth(($numCols - 2), ($numGutters - 2), $gutter, $mobileWidth) / $mobileWidth);
	}
}

.gutterSizer{
	width: percentage($gutter / $maxWidth);

	// @media only screen and(max-width: $breakPoint1){
	// 	width: percentage($gutter / $breakPoint1);
	// }

	@media only screen and(max-width: $breakPoint2){
		width: percentage($gutter / $breakPoint2);
	}

	@media only screen and(max-width: $breakPoint3){
		width: percentage($gutter / $breakPoint3);
	}

	@media only screen and(max-width: $mobileWidth){
		width: percentage($gutter / $mobileWidth);
	}
}

.folderHeader{
	@media only screen and(max-width: $breakPoint3){
		display: none;
	}

	#navFix{
		position: absolute;
		bottom: 137px;
	}
}

.folderContent{
	margin: 0 auto;
	width: $fullWidth;
}

// FOLDERITEM

.folderItem{
	border-collapse: collapse;
	display: block;
	float: left;
	//height: $oneRow;
	//margin-left: percentage($gutter / $maxWidth);
	margin-bottom: $gutter;
	width: percentage( colWidth($numCols, $numGutters, $gutter, $maxWidth) / $maxWidth);

	@media only screen and(max-width: 1199px) {
		margin-bottom: 24px;
	}

	article, video{
		float: left;
		//height: percentage(($oneRow - $captionHeight) / $oneRow);
		width: 100% !important;
	}

	video{
		@media only screen and(max-width: 1199px) {
			height: 241px !important;
		}
	}

	.video, .sfeer{
		position: relative;
	}

	img{
		//height: auto;
		width: 100%;
	}

	.product{
		float: left;
		//height: $fullHeight;
		position: relative;
		width: $fullWidth;
	}

	.lazy{
		float: left;
		//height: $oneRow;
		max-width: $fullWidth;

		@media only screen and(max-width: 1199px) {
	    height: auto !important;
	  }
	}

	&.twoRow{
		height: $twoRow;
		
		@media only screen and(max-width: 1199px) {
			height: 510px;
		}
	}

	& + .folderitem{
		margin-left: 0;
	}

	@media only screen and(max-width: $breakPoint1){
		width: percentage( colWidth(($numCols), ($numGutters), 24px, $breakPoint1) / $breakPoint1);
	}

	@media only screen and(max-width: $breakPoint2){
		width: percentage( colWidth(($numCols - 1), ($numGutters - 1), $gutter, $breakPoint2) / $breakPoint2);
	}

	@media only screen and(max-width: $breakPoint3){
		width: percentage( colWidth(($numCols - 1), ($numGutters - 1), $gutter, $breakPoint3) / $breakPoint3);
	}

	@media only screen and(max-width: $mobileWidth){
		width: percentage( colWidth(($numCols - 2), ($numGutters - 2), $gutter, $mobileWidth) / $mobileWidth);
	}
}

.twoCol{
	width: percentage( (colWidth($numCols, $numGutters, $gutter, $maxWidth) * 2 + $gutter) / $maxWidth);

	@media only screen and(max-width: $breakPoint2){
		width: percentage( (colWidth(($numCols - 1), ($numGutters - 1), $gutter, $breakPoint2) / $breakPoint2) * 2) + percentage($gutter / $breakPoint2);
	}

	@media only screen and(max-width: $breakPoint3){
		width: percentage( (colWidth(($numCols - 1), ($numGutters - 1), $gutter, $breakPoint3) / $breakPoint3) * 2) + percentage($gutter / $breakPoint3);
	}

	@media only screen and(max-width: $mobileWidth){
		width: percentage( (colWidth(($numCols - 2), ($numGutters - 2), $gutter, $mobileWidth) / $mobileWidth) * 2) + percentage($gutter / $breakPoint3);
	}
}

// KERSTBLOK

.kerstblok{
	height: 300px;
	width: 270px;

	.kerst-cta{
		background: linear-gradient(top, #9F2730, darken(#9F2730, 2%));
		border: 1px solid darken(#9F2730, 3%);
		box-shadow: 1px 1px 2px rgba(0,0,0,0.1);
		color: #ffffff;
		font-size: 15px;
		height: 40px;
		padding: 0 1em;
		text-shadow: 1px 1px 1px rgba(0,0,0,0.1);
		width: 80%;

		&:after{
			content: 'ïƒš';
			font-family: 'FontAwesome';
			float: right;
		}
	}
}

// DESCRIPTION
.description{
	float: left;
	height: $captionHeight;
	padding: 0 .5em;
	width: 100%;

	@media only screen and(max-width: 1199px) {
		height: 49px;
	}

	&.hasDescription{
		height: $descriptionHeight;

		@media only screen and(max-width: 1199px) {
			height: 110px;
		}
	}

	.title-block{
		margin-bottom: .5em;
		width: 100%;
		
		h3, h3 a{
			margin: .6em 0 .4em;
		}

		h4, h4 a{
			margin: .4em 0;
		}
	}

	p, p a{
		padding-top: 1em;
		padding-bottom: 1em;

		.end-block{
			display: inline-block;
			height: 6px;
			position: relative;
				top: -1px;
				left: 4px;
			width: 6px;
		}
	}
}

/* =======================================
		END NESTING 
========================================*/

}

/* ------------------------------------ */

